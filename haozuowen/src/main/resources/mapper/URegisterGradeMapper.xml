<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.langying.controller.mapper.URegisterGradeMapper">
    <resultMap id="BaseResultMap" type="com.langying.models.URegisterGrade">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="grade_id" property="gradeId" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, grade_id
  </sql>


    <sql id="Example_Where_Clause" >
        <trim prefix="where" prefixOverrides="and|or" >
            <if test="params.userId != null" >
                and user_id = #{params.userId,jdbcType=INTEGER}
            </if>
            <if test="params.gradeId != null" >
                and grade_id = #{params.gradeId,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    <select id="selectByParams" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from u_register_grade
        <include refid="Example_Where_Clause" />
    </select>
    <select id="selectCountByParams" resultType="int" >
        select count(*) from r_user_book
        <include refid="Example_Where_Clause" />
    </select>
    <select id="selectListByParams" resultType="list" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from u_register_grade
        <include refid="Example_Where_Clause" />
        <if test="orderParam != null" >
            order by ${orderParam}
        </if>
        <include refid="common.Pagination_Limit" />
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from u_register_grade
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_register_grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.langying.models.URegisterGrade">
    insert into u_register_grade (id, user_id, grade_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{gradeId,jdbcType=CHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.langying.models.URegisterGrade">
        insert into u_register_grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="gradeId != null">
                grade_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                #{gradeId,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.langying.models.URegisterGrade">
        update u_register_grade
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                grade_id = #{gradeId,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.langying.models.URegisterGrade">
    update u_register_grade
    set user_id = #{userId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>